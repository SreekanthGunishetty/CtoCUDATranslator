#include<stdio.h>
#include<conio.h>



void main()
{
	int i;
	int j;
	int k;
	local int a;
	local int b;
	local int u;
	local int v;
	int n;
	local int ne=1;
	local int minimum;
	kernel int mincost=0;
	kernel int cost[20][20];
	local int flag;
	kernel int parent[20]; 
	n=7;
	printf("\nEnter the cost adjacency matrix\n");;
	for(i = 0;i<=20;i++)
	{
	parent[i]=0;
	}
	for(i = 1;i<=n;i++)
	{
		for(j = 1;j<=n;j++)
		{
			cost[i][j] = rand()%100;
			if(cost[i][j]==0)
			{
				cost[i][j]=999;
			}
		}
	}
	printf("\nThe edges of Minimum Cost Spanning Tree are\n\n");;
	#pragma kernel_start
	while(ne<n)
	{
	    minimum = 999;
		for(i = 1;i<=n;i++)
		{
			for(j = 1;j<=n;j++)
			{
				if(cost[i][j]<minimum)
				{
					minimum = cost[i][j];
					a = i;
					u = i;
					b = j;
					v = j;
				}
			}
		}

		if(u!=v)
		{
			flag=1;
		}
		else 
		{
			flag=0;
		}

		if(flag)
		{
			//printf("\n%d edge (%d,%d) =%d\n",ne++,a,b,minimum);;
			ne += 1;
			mincost += minimum ;
		}
		cost[a][b] = 999;
		cost[b][a] = 999;
	}
	#pragma kernel_end
	
	printf("\n\tMinimum cost = %d\n",mincost);;
	getch() ;
}
